#!/usr/bin/env python
"""
Text-diff utility for config files that does not get disturbed
by those not obeying semantic line feeds[1].

[1]: https://rhodesmill.org/brandon/2012/one-sentence-per-line/
"""


import argparse
import difflib

par = argparse.ArgumentParser()
par.add_argument('--no-color', dest='color', action='store_false')
par.add_argument('ifile1', type=argparse.FileType('r'))
par.add_argument('ifile2', type=argparse.FileType('r'))
arg = par.parse_args()

def likely_language(line):
    return '=' not in line and '()' not in line

def transform(ifile):
    for line in ifile:
        if line.startswith('#') and likely_language(line):
            words = line.lstrip('#').split()
            if not words:
                yield line
                continue
            prefix = line[:line.index(words[0])]
            yield from map(prefix.__add__, words)
        else:
            yield line

def detransform(ifile):
    prev_line = ''
    for line in ifile:
        if not likely_language(line):
            yield prev_line
            prev_line = line.rstrip()
            continue
        for c in ('-#', '+#', ' #'):
            if line.startswith(c) and prev_line.startswith(c) and len(prev_line) + len(line) <= 80:
                prev_line += line[2:].rstrip()
                break
        else:
            yield prev_line
            prev_line = line.rstrip()

def colorful(ifile):
    colors = {'-':"\33[31m", '+':"\33[32m", '@':"\33[36m", '':"\33[m"}
    if not arg.color:
        colors = {'':''}
    for line in ifile:
        yield colors.get(line[:1],"") + line + colors['']

for difline in colorful(detransform(difflib.unified_diff(
    list(transform(arg.ifile1)),
    list(transform(arg.ifile2))))):
  print(difline)
